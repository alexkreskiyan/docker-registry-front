version: '3.8'
services:
  # production setup
  docker-registry:
    restart: always
    container_name: docker_registry
    image: registry:2
    volumes:
      - ./run/registry/config.yml:/etc/docker/registry/config.yml:ro
      - ./run/keys/cert.pem:/keys/cert.pem:ro
      - ./run/registry/data:/registry
  docker-registry-server:
    build:
      context: Server
      dockerfile: app.dockerfile
    restart: always
    image: docker-registry-server
    container_name: docker_registry_server
    volumes:
      - ./run/server/config.json:/app/config.json:ro
      - ./run/keys/key.pem:/app/key.pem:ro
  docker-registry-site:
    build:
      context: Site
      dockerfile: app.dockerfile
    restart: always
    image: docker-registry-site
    container_name: docker_registry_site
    volumes:
      - ./run/site/config.json:/usr/share/nginx/html/config.json:ro
    ports:
      - 8700:80
  # development setup
  dev-registry:
    restart: always
    container_name: docker_registry
    image: registry:2
    volumes:
      - ./run/registry/config.yml:/etc/docker/registry/config.yml:ro
      - ./run/keys/cert.pem:/keys/cert.pem:ro
      - ./run/registry/data:/registry
    network_mode: host
  dev-proxy:
    container_name: docker_registry_proxy
    image: 'nginx:alpine'
    restart: always
    volumes:
      - ./Site/docker/nginx_parts:/etc/nginx/conf.d/parts:ro
      - ./Site/docker/proxy.conf:/etc/nginx/conf.d/default.conf:ro
    network_mode: host
